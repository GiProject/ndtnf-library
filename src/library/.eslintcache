[{"/app/app.ts":"1","/app/container.ts":"2","/app/interfaces/BookRepositoryInterface.ts":"3","/app/interfaces/models/IBook.ts":"4","/app/middleware/error.ts":"5","/app/middleware/file.ts":"6","/app/models/Book.ts":"7","/app/repositories/BookRepository.ts":"8","/app/routes/api/books.ts":"9","/app/routes/api/user.ts":"10","/app/routes/page/books.ts":"11","/app/routes/page/index.ts":"12","/app/services/counter.ts":"13"},{"size":977,"mtime":1699047382886,"results":"14","hashOfConfig":"15"},{"size":335,"mtime":1699045240564,"results":"16","hashOfConfig":"15"},{"size":317,"mtime":1699044829128,"results":"17","hashOfConfig":"15"},{"size":196,"mtime":1699046539434,"results":"18","hashOfConfig":"15"},{"size":148,"mtime":1699044934542,"results":"19","hashOfConfig":"15"},{"size":305,"mtime":1699045028461,"results":"20","hashOfConfig":"15"},{"size":595,"mtime":1699061468858,"results":"21","hashOfConfig":"15"},{"size":1266,"mtime":1699061558833,"results":"22","hashOfConfig":"15"},{"size":2364,"mtime":1699057499865,"results":"23","hashOfConfig":"15"},{"size":251,"mtime":1699045539079,"results":"24","hashOfConfig":"15"},{"size":2851,"mtime":1699062265403,"results":"25","hashOfConfig":"15"},{"size":166,"mtime":1699047325156,"results":"26","hashOfConfig":"15"},{"size":512,"mtime":1699045979425,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1adwfyp",{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":6,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":13,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":4,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/app/app.ts",[],[],"/app/container.ts",[],[],"/app/interfaces/BookRepositoryInterface.ts",[],[],"/app/interfaces/models/IBook.ts",[],[],"/app/middleware/error.ts",["74","75"],[],"const error = (req: any, res: any) => {\r\n    res.status(404)\r\n    res.json('404 | страница не найдена')\r\n}\r\n\r\nexport default error;","/app/middleware/file.ts",["76","77","78","79","80","81"],[],"import multer from 'multer'\r\n\r\nconst storage = multer.diskStorage({\r\n    destination(req: any, file: any, cb: any){\r\n        cb(null, 'files/books')\r\n    },\r\n    filename(req: any, file: any, cb: any) {\r\n        cb(null, `${Date.now()}-${file.originalname}`)\r\n    }\r\n})\r\n\r\nexport default multer({storage})","/app/models/Book.ts",[],[],"/app/repositories/BookRepository.ts",["82"],[],"import BookRepositoryInterface from '../interfaces/BookRepositoryInterface';\nimport { injectable } from \"inversify\";\nimport { IBook } from '../interfaces/models/IBook'\nimport {Book} from \"../models/Book\";\n\n@injectable()\nexport default class BookRepository implements BookRepositoryInterface {\n    async getBooks (): Promise<IBook[]> {\n        try {\n            return await Book.find().select('-__v')\n        } catch (e) {\n            console.error(e)\n        }\n    }\n\n    async getBook(id: string): Promise<IBook> {\n        try {\n            return await Book.findById(id).select('-__v')\n        } catch (e) {\n            console.error(e)\n        }\n    }\n\n    async createBook(data: any): Promise<IBook> {\n        try {\n            const book = new Book(data);\n            await book.save();\n            return book;\n        } catch (e) {\n            console.error(e)\n        }\n    }\n\n    async updateBook(id: string, data: object): Promise<IBook> {\n        try {\n            return await Book.findByIdAndUpdate(id, data)\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    async deleteBook(id: string): Promise<void> {\n        try {\n            await Book.deleteOne({_id: id})\n        } catch (e) {\n            console.log(e);\n        }\n    }\n}\n\n","/app/routes/api/books.ts",["83","84","85","86","87","88","89","90","91","92","93","94","95"],[],"import { Router } from 'express';\r\nimport fileMiddleware from '../../middleware/file';\r\nimport path from 'path';\r\nimport { container } from '../../container';\r\nimport BookRepository from '../../repositories/BookRepository';\r\n\r\nconst router = Router();\r\nconst bookRepository = container.get(BookRepository);\r\nrouter.get('/', async (req: any, res: any) => {\r\n\r\n    const books = await bookRepository.getBooks();\r\n\r\n    res.status(200).json(books).end();\r\n});\r\n\r\nrouter.get('/:id', async (req: any, res: any) => {\r\n    const {id} = req.params;\r\n\r\n    const book = await bookRepository.getBook(id);\r\n\r\n    res.status(200).json(book).end();\r\n});\r\n\r\nrouter.get('/:id/download', async (req: any, res: any) => {\r\n    const {id} = req.params;\r\n\r\n    try {\r\n        const book = await bookRepository.getBook(id);\r\n\r\n        if (book) {\r\n            res.download(path.join(__dirname, \"../..\", book.fileName), (err: any) => {\r\n                if (err) {\r\n                    res.status(404).send(\"not found\");\r\n                }\r\n            });\r\n        } else {\r\n            res.status(404).send('not found');\r\n        }\r\n\r\n        res.status(200).json(book);\r\n    } catch (e) {\r\n        res.status(404).send(\"not found\");\r\n    }\r\n\r\n    res.end();\r\n});\r\n\r\nrouter.post('/',  fileMiddleware.single(\"fileBook\"), async (req: any, res: any) => {\r\n    const {title, description, authors, favorite, fileCover, fileName, } = req.body;\r\n    const {file} = req;\r\n    let fileBook = '';\r\n\r\n    if (file) {\r\n        fileBook = file.path\r\n    }\r\n\r\n    const book = await bookRepository.createBook({title, description, authors, favorite, fileName, fileCover, fileBook});\r\n\r\n    res.status(201).json(book);\r\n    res.end();\r\n});\r\n\r\nrouter.put('/:id',  fileMiddleware.single(\"fileBook\"), async (req: any, res: any) => {\r\n    const {id} = req.params;\r\n    const {title, description, authors, favorite, fileCover, fileName} = req.body;\r\n    const {file} = req;\r\n    let fileBook = '';\r\n\r\n    if (file) {\r\n        fileBook = file.path\r\n    }\r\n    const book = await bookRepository.updateBook(id, {title, description, authors, favorite, fileName, fileCover, fileBook});\r\n\r\n    res.status(200).json(book).end();\r\n});\r\n\r\nrouter.delete('/:id', async (req: any, res: any) => {\r\n    const {id} = req.params;\r\n\r\n    await bookRepository.deleteBook(id);\r\n\r\n    res.end();\r\n});\r\n\r\nexport default router;","/app/routes/api/user.ts",["96","97"],[],"import { Router } from 'express';\r\n\r\nconst router = Router();\r\n\r\nrouter.post('/login', (req: any, res: any) => {\r\n    res.status(200);\r\n    res.json({\r\n        id: 1,\r\n        mail: 'test@mail.ru'\r\n    })\r\n    res.end();\r\n});\r\n\r\nexport default router;","/app/routes/page/books.ts",["98","99","100","101"],[],"import { Router } from 'express';\r\nimport { Book } from '../../models/Book';\r\n\r\nimport fileMiddleware from '../../middleware/file';\r\nimport Counter from '../../services/counter';\r\nimport {container} from \"../../container\";\r\nimport BookRepository from \"../../repositories/BookRepository\";\r\n\r\nconst router = Router();\r\nconst bookRepository = container.get(BookRepository);\r\nrouter.get(\"/\", async (_req, res) => {\r\n    const books = await bookRepository.getBooks();\r\n\r\n\tres.render(\"books/list\", { title: \"Книги\", books: books });\r\n});\r\n\r\nrouter.get(\"/create\", (_req, res) => {\r\n\tres.render(\"books/create\", { title: \"Добавление книги\", book: {} });\r\n});\r\n\r\nrouter.post(\"/create\", fileMiddleware.single(\"fileBook\"), async (req, res) => {\r\n    const {title, description, authors, favorite, fileCover, fileName, } = req.body;\r\n    const {file} = req;\r\n    let fileBook = '';\r\n\r\n    if (file) {\r\n        fileBook = file.path\r\n    }\r\n\r\n    await bookRepository.createBook({title, description, authors, favorite, fileName, fileCover, fileBook});\r\n\r\n    res.status(201);\r\n    res.redirect(\"/books/\");\r\n});\r\n\r\nrouter.get(\"/update/:id\", async (req, res) => {\r\n\tconst { id } = req.params;\r\n    const book = await bookRepository.getBook(id);\r\n\r\n\tif (book) {\r\n\t\tres.render(\"books/update\", {\r\n\t\t\ttitle: \"Редактирование книги\",\r\n\t\t\tbook: book,\r\n\t\t});\r\n\t} else {\r\n\t\tres.status(404).redirect(\"/404\");\r\n\t}\r\n});\r\n\r\nrouter.post(\"/update/:id\", fileMiddleware.single(\"fileBook\"), async (req, res) => {\r\n    const {id} = req.params;\r\n    const {title, description, authors, favorite, fileCover, fileName} = req.body;\r\n    const {file} = req;\r\n    let fileBook = '';\r\n\r\n    if (file) {\r\n        fileBook = file.path\r\n    }\r\n    await bookRepository.updateBook(id, {title, description, authors, favorite, fileName, fileCover, fileBook});\r\n\r\n    res.redirect(\"/books/view/\" + id);\r\n});\r\n\r\nrouter.get(\"/view\", async (_req, res) => {\r\n    const books = await bookRepository.getBooks();\r\n\tres.render(\"books/view\", { title: \"Книги\", books: books });\r\n});\r\n\r\nrouter.get(\"/view/:id\", async (req, res) => {\r\n    const {id} = req.params;\r\n\r\n    const book = await bookRepository.getBook(id);\r\n\r\n    const counter = new Counter;\r\n\r\n    await counter.setViewCount(id);\r\n    let bookViewCountPromise = await counter.getViewCount(id);\r\n    // @ts-ignore\r\n    let bookViewCount = await bookViewCountPromise.text();\r\n\r\n\tif (book) {\r\n\t\tres.render(\"books/view\", {\r\n            title: \"Просмотр книги\",\r\n            book: book,\r\n            bookViewCount: bookViewCount\r\n        });\r\n\t} else {\r\n\t\tres.status(404).redirect(\"/404\");\r\n\t}\r\n});\r\n\r\nrouter.post(\"/delete/:id\", async (req, res) => {\r\n    const {id} = req.params;\r\n\r\n    await bookRepository.deleteBook(id);\r\n\r\n    res.status(200).redirect(\"/books/\");\r\n});\r\n\r\nexport default router;","/app/routes/page/index.ts",["102","103","104"],[],"const router = require(\"express\").Router();\n\nrouter.get(\"/\", (_req: any, res: any) => {\n\tres.render(\"index\", { title: \"Главная\" });\n});\n\nexport default router;","/app/services/counter.ts",[],[],{"ruleId":"105","severity":2,"message":"106","line":1,"column":21,"nodeType":"107","messageId":"108","endLine":1,"endColumn":24,"suggestions":"109"},{"ruleId":"105","severity":2,"message":"106","line":1,"column":31,"nodeType":"107","messageId":"108","endLine":1,"endColumn":34,"suggestions":"110"},{"ruleId":"105","severity":2,"message":"106","line":4,"column":22,"nodeType":"107","messageId":"108","endLine":4,"endColumn":25,"suggestions":"111"},{"ruleId":"105","severity":2,"message":"106","line":4,"column":33,"nodeType":"107","messageId":"108","endLine":4,"endColumn":36,"suggestions":"112"},{"ruleId":"105","severity":2,"message":"106","line":4,"column":42,"nodeType":"107","messageId":"108","endLine":4,"endColumn":45,"suggestions":"113"},{"ruleId":"105","severity":2,"message":"106","line":7,"column":19,"nodeType":"107","messageId":"108","endLine":7,"endColumn":22,"suggestions":"114"},{"ruleId":"105","severity":2,"message":"106","line":7,"column":30,"nodeType":"107","messageId":"108","endLine":7,"endColumn":33,"suggestions":"115"},{"ruleId":"105","severity":2,"message":"106","line":7,"column":39,"nodeType":"107","messageId":"108","endLine":7,"endColumn":42,"suggestions":"116"},{"ruleId":"105","severity":2,"message":"106","line":24,"column":28,"nodeType":"107","messageId":"108","endLine":24,"endColumn":31,"suggestions":"117"},{"ruleId":"105","severity":2,"message":"106","line":9,"column":29,"nodeType":"107","messageId":"108","endLine":9,"endColumn":32,"suggestions":"118"},{"ruleId":"105","severity":2,"message":"106","line":9,"column":39,"nodeType":"107","messageId":"108","endLine":9,"endColumn":42,"suggestions":"119"},{"ruleId":"105","severity":2,"message":"106","line":16,"column":32,"nodeType":"107","messageId":"108","endLine":16,"endColumn":35,"suggestions":"120"},{"ruleId":"105","severity":2,"message":"106","line":16,"column":42,"nodeType":"107","messageId":"108","endLine":16,"endColumn":45,"suggestions":"121"},{"ruleId":"105","severity":2,"message":"106","line":24,"column":41,"nodeType":"107","messageId":"108","endLine":24,"endColumn":44,"suggestions":"122"},{"ruleId":"105","severity":2,"message":"106","line":24,"column":51,"nodeType":"107","messageId":"108","endLine":24,"endColumn":54,"suggestions":"123"},{"ruleId":"105","severity":2,"message":"106","line":31,"column":78,"nodeType":"107","messageId":"108","endLine":31,"endColumn":81,"suggestions":"124"},{"ruleId":"105","severity":2,"message":"106","line":48,"column":66,"nodeType":"107","messageId":"108","endLine":48,"endColumn":69,"suggestions":"125"},{"ruleId":"105","severity":2,"message":"106","line":48,"column":76,"nodeType":"107","messageId":"108","endLine":48,"endColumn":79,"suggestions":"126"},{"ruleId":"105","severity":2,"message":"106","line":63,"column":68,"nodeType":"107","messageId":"108","endLine":63,"endColumn":71,"suggestions":"127"},{"ruleId":"105","severity":2,"message":"106","line":63,"column":78,"nodeType":"107","messageId":"108","endLine":63,"endColumn":81,"suggestions":"128"},{"ruleId":"105","severity":2,"message":"106","line":77,"column":35,"nodeType":"107","messageId":"108","endLine":77,"endColumn":38,"suggestions":"129"},{"ruleId":"105","severity":2,"message":"106","line":77,"column":45,"nodeType":"107","messageId":"108","endLine":77,"endColumn":48,"suggestions":"130"},{"ruleId":"105","severity":2,"message":"106","line":5,"column":29,"nodeType":"107","messageId":"108","endLine":5,"endColumn":32,"suggestions":"131"},{"ruleId":"105","severity":2,"message":"106","line":5,"column":39,"nodeType":"107","messageId":"108","endLine":5,"endColumn":42,"suggestions":"132"},{"ruleId":"133","severity":2,"message":"134","line":2,"column":10,"nodeType":"135","messageId":"136","endLine":2,"endColumn":14},{"ruleId":"137","severity":2,"message":"138","line":77,"column":9,"nodeType":"135","messageId":"139","endLine":77,"endColumn":29,"fix":"140"},{"ruleId":"141","severity":2,"message":"142","line":78,"column":5,"nodeType":"143","messageId":"144","endLine":78,"endColumn":18},{"ruleId":"137","severity":2,"message":"145","line":79,"column":9,"nodeType":"135","messageId":"139","endLine":79,"endColumn":22,"fix":"146"},{"ruleId":"147","severity":2,"message":"148","line":1,"column":16,"nodeType":"149","messageId":"150","endLine":1,"endColumn":34},{"ruleId":"105","severity":2,"message":"106","line":3,"column":24,"nodeType":"107","messageId":"108","endLine":3,"endColumn":27,"suggestions":"151"},{"ruleId":"105","severity":2,"message":"106","line":3,"column":34,"nodeType":"107","messageId":"108","endLine":3,"endColumn":37,"suggestions":"152"},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["153","154"],["155","156"],["157","158"],["159","160"],["161","162"],["163","164"],["165","166"],["167","168"],["169","170"],["171","172"],["173","174"],["175","176"],["177","178"],["179","180"],["181","182"],["183","184"],["185","186"],["187","188"],["189","190"],["191","192"],["193","194"],["195","196"],["197","198"],["199","200"],"@typescript-eslint/no-unused-vars","'Book' is defined but never used.","Identifier","unusedVar","prefer-const","'bookViewCountPromise' is never reassigned. Use 'const' instead.","useConst",{"range":"201","text":"202"},"@typescript-eslint/ban-ts-comment","Do not use \"@ts-ignore\" because it alters compilation errors.","Line","tsDirectiveComment","'bookViewCount' is never reassigned. Use 'const' instead.",{"range":"203","text":"204"},"@typescript-eslint/no-var-requires","Require statement not part of import statement.","CallExpression","noVarReqs",["205","206"],["207","208"],{"messageId":"209","fix":"210","desc":"211"},{"messageId":"212","fix":"213","desc":"214"},{"messageId":"209","fix":"215","desc":"211"},{"messageId":"212","fix":"216","desc":"214"},{"messageId":"209","fix":"217","desc":"211"},{"messageId":"212","fix":"218","desc":"214"},{"messageId":"209","fix":"219","desc":"211"},{"messageId":"212","fix":"220","desc":"214"},{"messageId":"209","fix":"221","desc":"211"},{"messageId":"212","fix":"222","desc":"214"},{"messageId":"209","fix":"223","desc":"211"},{"messageId":"212","fix":"224","desc":"214"},{"messageId":"209","fix":"225","desc":"211"},{"messageId":"212","fix":"226","desc":"214"},{"messageId":"209","fix":"227","desc":"211"},{"messageId":"212","fix":"228","desc":"214"},{"messageId":"209","fix":"229","desc":"211"},{"messageId":"212","fix":"230","desc":"214"},{"messageId":"209","fix":"231","desc":"211"},{"messageId":"212","fix":"232","desc":"214"},{"messageId":"209","fix":"233","desc":"211"},{"messageId":"212","fix":"234","desc":"214"},{"messageId":"209","fix":"235","desc":"211"},{"messageId":"212","fix":"236","desc":"214"},{"messageId":"209","fix":"237","desc":"211"},{"messageId":"212","fix":"238","desc":"214"},{"messageId":"209","fix":"239","desc":"211"},{"messageId":"212","fix":"240","desc":"214"},{"messageId":"209","fix":"241","desc":"211"},{"messageId":"212","fix":"242","desc":"214"},{"messageId":"209","fix":"243","desc":"211"},{"messageId":"212","fix":"244","desc":"214"},{"messageId":"209","fix":"245","desc":"211"},{"messageId":"212","fix":"246","desc":"214"},{"messageId":"209","fix":"247","desc":"211"},{"messageId":"212","fix":"248","desc":"214"},{"messageId":"209","fix":"249","desc":"211"},{"messageId":"212","fix":"250","desc":"214"},{"messageId":"209","fix":"251","desc":"211"},{"messageId":"212","fix":"252","desc":"214"},{"messageId":"209","fix":"253","desc":"211"},{"messageId":"212","fix":"254","desc":"214"},{"messageId":"209","fix":"255","desc":"211"},{"messageId":"212","fix":"256","desc":"214"},{"messageId":"209","fix":"257","desc":"211"},{"messageId":"212","fix":"258","desc":"214"},{"messageId":"209","fix":"259","desc":"211"},{"messageId":"212","fix":"260","desc":"214"},[2235,2293],"const bookViewCountPromise = await counter.getViewCount(id);",[2318,2372],"const bookViewCount = await bookViewCountPromise.text();",{"messageId":"209","fix":"261","desc":"211"},{"messageId":"212","fix":"262","desc":"214"},{"messageId":"209","fix":"263","desc":"211"},{"messageId":"212","fix":"264","desc":"214"},"suggestUnknown",{"range":"265","text":"266"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"267","text":"268"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"269","text":"266"},{"range":"270","text":"268"},{"range":"271","text":"266"},{"range":"272","text":"268"},{"range":"273","text":"266"},{"range":"274","text":"268"},{"range":"275","text":"266"},{"range":"276","text":"268"},{"range":"277","text":"266"},{"range":"278","text":"268"},{"range":"279","text":"266"},{"range":"280","text":"268"},{"range":"281","text":"266"},{"range":"282","text":"268"},{"range":"283","text":"266"},{"range":"284","text":"268"},{"range":"285","text":"266"},{"range":"286","text":"268"},{"range":"287","text":"266"},{"range":"288","text":"268"},{"range":"289","text":"266"},{"range":"290","text":"268"},{"range":"291","text":"266"},{"range":"292","text":"268"},{"range":"293","text":"266"},{"range":"294","text":"268"},{"range":"295","text":"266"},{"range":"296","text":"268"},{"range":"297","text":"266"},{"range":"298","text":"268"},{"range":"299","text":"266"},{"range":"300","text":"268"},{"range":"301","text":"266"},{"range":"302","text":"268"},{"range":"303","text":"266"},{"range":"304","text":"268"},{"range":"305","text":"266"},{"range":"306","text":"268"},{"range":"307","text":"266"},{"range":"308","text":"268"},{"range":"309","text":"266"},{"range":"310","text":"268"},{"range":"311","text":"266"},{"range":"312","text":"268"},{"range":"313","text":"266"},{"range":"314","text":"268"},{"range":"315","text":"266"},{"range":"316","text":"268"},{"range":"317","text":"266"},{"range":"318","text":"268"},[20,23],"unknown",[20,23],"never",[30,33],[30,33],[90,93],[90,93],[101,104],[101,104],[110,113],[110,113],[176,179],[176,179],[187,190],[187,190],[196,199],[196,199],[684,687],[684,687],[336,339],[336,339],[346,349],[346,349],[491,494],[491,494],[501,504],[501,504],[684,687],[684,687],[694,697],[694,697],[904,907],[904,907],[1311,1314],[1311,1314],[1321,1324],[1321,1324],[1773,1776],[1773,1776],[1783,1786],[1783,1786],[2222,2225],[2222,2225],[2232,2235],[2232,2235],[93,96],[93,96],[103,106],[103,106],[68,71],[68,71],[78,81],[78,81]]